import os
import asyncio
from flask import Flask, request, abort
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
TOKEN = os.getenv("TOKEN")
PORT = int(os.getenv("PORT", "10000"))
HOSTNAME = os.getenv("RENDER_EXTERNAL_HOSTNAME")

# Flask –∑–∞—Å—Ç–æ—Å—É–Ω–æ–∫
app = Flask(__name__)

# Telegram –∑–∞—Å—Ç–æ—Å—É–Ω–æ–∫
telegram_app = Application.builder().token(TOKEN).build()

# –û–±—Ä–æ–±–Ω–∏–∫ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç! –ë–æ—Ç –ø—Ä–∞—Ü—é—î!")

telegram_app.add_handler(CommandHandler("start", start))

# Webhook —à–ª—è—Ö–∏
WEBHOOK_PATH = f"/{TOKEN}"
WEBHOOK_URL = f"https://{HOSTNAME}{WEBHOOK_PATH}"

# üî• –ö–æ—Ä–µ–Ω–µ–≤–∏–π –º–∞—Ä—à—Ä—É—Ç (–¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ Render'–æ–º)
@app.route("/", methods=["GET"])
def index():
    return "–ë–æ—Ç –ø—Ä–∞—Ü—é—î! Webhook OK ‚úÖ"

# üîÅ Webhook –º–∞—Ä—à—Ä—É—Ç Telegram
@app.route(WEBHOOK_PATH, methods=["POST"])
def webhook():
    if request.method == "POST":
        update = Update.de_json(request.get_json(force=True), telegram_app.bot)
        asyncio.create_task(telegram_app.process_update(update))
        return "OK"
    else:
        abort(405)

# üéØ –û—Å–Ω–æ–≤–Ω–∏–π –∑–∞–ø—É—Å–∫
if __name__ == "__main__":
    async def main():
        await telegram_app.bot.set_webhook(WEBHOOK_URL)
        print("Webhook –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
        app.run(host="0.0.0.0", port=PORT)

    asyncio.run(main())
