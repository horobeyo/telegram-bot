import os
import asyncio
import re
from flask import Flask, request
from telegram import Update, ChatMemberUpdated
from telegram.ext import Application, CommandHandler, ChatMemberHandler, ContextTypes
from dotenv import load_dotenv

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
load_dotenv()
TOKEN = os.getenv("TOKEN")
PORT = int(os.getenv("PORT", "10000"))
HOSTNAME = os.getenv("RENDER_EXTERNAL_HOSTNAME")

# Flask –∑–∞—Å—Ç–æ—Å—É–Ω–æ–∫
app = Flask(__name__)

# Telegram –∑–∞—Å—Ç–æ—Å—É–Ω–æ–∫
telegram_app = Application.builder().token(TOKEN).build()

# –û–±—Ä–æ–±–Ω–∏–∫ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç! –ë–æ—Ç –ø—Ä–∞—Ü—é—î!")

telegram_app.add_handler(CommandHandler("start", start))

# üõ°Ô∏è –§—ñ–ª—å—Ç—Ä –∫–∏—Ç–∞–π—Å—å–∫–∏—Ö —Ç–∞ –∞—Ä–∞–±—Å—å–∫–∏—Ö —ñ–º–µ–Ω
async def handle_new_member(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if isinstance(update, ChatMemberUpdated):
        new_user = update.chat_member.new_chat_member.user
        name = (new_user.full_name or "").strip()
        
        # –Æ–Ω—ñ–∫–æ–¥ –¥—ñ–∞–ø–∞–∑–æ–Ω–∏ –∫–∏—Ç–∞–π—Å—å–∫–∏—Ö/–∞—Ä–∞–±—Å—å–∫–∏—Ö —Å–∏–º–≤–æ–ª—ñ–≤
        if re.search(r'[\u0600-\u06FF\u0750-\u077F\u08A0-\u08FF\u4E00-\u9FFF]', name):
            try:
                await context.bot.ban_chat_member(update.chat.id, new_user.id)
                print(f"üö´ –ó–∞–±–æ—Ä–æ–Ω–µ–Ω–æ: {name} (id={new_user.id})")
            except Exception as e:
                print(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –±–∞–Ω—ñ: {e}")

telegram_app.add_handler(ChatMemberHandler(handle_new_member, ChatMemberHandler.CHAT_MEMBER))

# Webhook –º–∞—Ä—à—Ä—É—Ç
@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    update = Update.de_json(request.get_json(force=True), telegram_app.bot)
    
    async def process():
        await telegram_app.initialize()
        await telegram_app.process_update(update)

    asyncio.run(process())
    return "OK", 200

# Render –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∂–∏–≤–æ—Å—Ç—ñ
@app.route("/", methods=["GET"])
def index():
    return "‚úÖ –ë–æ—Ç –ø—Ä–∞—Ü—é—î!"

# –°—Ç–∞—Ä—Ç–æ–≤–∞ —Ç–æ—á–∫–∞
if __name__ == "__main__":
    # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è webhook
    async def set_webhook():
        await telegram_app.bot.set_webhook(url=f"https://{HOSTNAME}/{TOKEN}")
        print(f"‚úÖ Webhook –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–∞ –∞–¥—Ä–µ—Å–æ—é: https://{HOSTNAME}/{TOKEN}")
    
    asyncio.run(set_webhook())
    app.run(host="0.0.0.0", port=PORT)

