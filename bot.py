import os
import logging
from flask import Flask, request
from telegram import Update, Bot
from telegram.ext import ApplicationBuilder, ContextTypes, CommandHandler

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—ñ–≤
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –ó–º—ñ–Ω–Ω—ñ –æ—Ç–æ—á–µ–Ω–Ω—è
BOT_TOKEN = os.getenv("BOT_TOKEN")

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Flask —Ç–∞ Telegram Application
app = Flask(__name__)
telegram_app = ApplicationBuilder().token(BOT_TOKEN).build()

# –ü—Ä–∏–∫–ª–∞–¥ –∫–æ–º–∞–Ω–¥–∏ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç! –ë–æ—Ç –ø—Ä–∞—Ü—é—î üöÄ")

telegram_app.add_handler(CommandHandler("start", start))


# === ASYNC Webhook handler ===
@app.route(f"/{BOT_TOKEN}", methods=["POST"])
async def webhook():
    update = Update.de_json(request.get_json(force=True), telegram_app.bot)
    await telegram_app.initialize()
    await telegram_app.process_update(update)
    return "ok", 200


# === –ü—Ä–æ—Å—Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ –≥–æ–ª–æ–≤–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ ===
@app.route("/", methods=["GET"])
def index():
    return "–ë–æ—Ç –ø—Ä–∞—Ü—é—î!", 200


# === –û—Å–Ω–æ–≤–Ω–∏–π –±–ª–æ–∫ –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞ —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–µ–±—Ö—É–∫–∞ ===
if __name__ == "__main__":
    import asyncio

    async def set_webhook():
        bot = Bot(token=BOT_TOKEN)
        webhook_url = f"https://{os.getenv('RENDER_EXTERNAL_HOSTNAME')}/{BOT_TOKEN}"
        await bot.set_webhook(webhook_url)
        logging.info(f"‚úÖ Webhook –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–∞ –∞–¥—Ä–µ—Å–æ—é: {webhook_url}")

    asyncio.run(set_webhook())
    app.run(host="0.0.0.0", port=10000)


